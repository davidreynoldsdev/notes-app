trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
  demands: npm

variables:
  projectFolder: 'src/Notes.Web'
  buildOutputFolder: 'src/Notes.Web/build'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: false
    workingDir: 'src/Notes.Web'

- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run build'
    workingDir: 'src/Notes.Web'

## Copy the client to the staging directory
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(buildOutputFolder)' 
    contents: '**/*' 
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true

## Archive the files into a zip file for publishing
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: $(Build.ArtifactStagingDirectory)
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    includeRootFolder: false

## Publish the zip file
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Visual Studio Professional with MSDN(7e4901b5-30dc-42df-9d94-01b9f128322e)'
    appType: 'webAppLinux'
    WebAppName: 'apex-prod-uksouth-notes-web'
    packageForLinux: '$(buildOutputFolder)'
